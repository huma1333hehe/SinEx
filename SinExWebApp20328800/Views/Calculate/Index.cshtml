@model SinExWebApp20328800.ViewModels.FeeCalculateViewModel

@{
    ViewBag.Title = "Fee Calculator";
}

<h2>Fee Calculator</h2>
<hr />

@using (Html.BeginForm("Index", "Calculate", FormMethod.Get))
{
    <div class="form-group">
        <div class="col-md-12">
            @Html.LabelFor(a => a.origin, "Origin: ", new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.DropDownListFor(a => a.origin, Model.param.origins, "Please select...", new { @class = "form-control", Value = ViewBag.currentOrigin })
                @Html.ValidationMessageFor(a => a.origin, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(a => a.destination, "Destination: ", new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.DropDownListFor(a => a.destination, Model.param.destinations, "Please select...", new { @class = "form-control", Value = ViewBag.currentDestination })
                @Html.ValidationMessageFor(a => a.destination, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(a => a.packageType, "Package Type: ", new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.DropDownListFor(a => a.packageType, Model.param.packageTypes, "Please select...", new { @class = "form-control", Value = ViewBag.currentPackageType, id = "packageTypes_ddl", onchange = "+OnPackageTypesChange(this)" })
                @Html.ValidationMessageFor(a => a.packageType, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(a => a.size, "Size: ", new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.DropDownListFor(a => a.size, Model.param.sizes, new { @class = "form-control", Value = ViewBag.currentSize, id = "sizes_ddl" })
                @Html.ValidationMessageFor(a => a.size, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(a => a.serviceType, "Service Type: ", new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.DropDownListFor(a => a.serviceType, Model.param.serviceTypes, "Please select...", new { @class = "form-control", Value = ViewBag.currentServiceType })
                @Html.ValidationMessageFor(a => a.serviceType, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(a => a.weight, "Weight(kg): ", new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(a => a.weight, new { htmlAttributes = new { @class = "form-control", Value = ViewBag.currentWeight } })
                @Html.ValidationMessageFor(a => a.weight, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(a => a.currencyCode, "Currency: ", new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.DropDownListFor(a => a.currencyCode, Model.param.currencies, "Please select...", new { @class = "form-control", Value = ViewBag.currentCurrencyCode })
                @Html.ValidationMessageFor(a => a.currencyCode, "", new { @class = "text-danger" })
            </div>
        </div>
        <input type="submit" value="Calculate" />
    </div>
}

@if (ViewBag.price != null)
{
    <table class="table">
        <tr>
            <td>
                Origin
            </td>
            <td>
                @ViewBag.currentOrigin
            </td>
        </tr>

        <tr>
            <td>
                Destination
            </td>
            <td>
                @ViewBag.currentDestination
            </td>
        </tr>

        <tr>
            <td>
                Package Type
            </td>
            <td>
                @ViewBag.currentPackageType
            </td>
        </tr>

        <tr>
            <td>
                Package Size
            </td>
            <td>
                @ViewBag.currentSize
            </td>
        </tr>

        <tr>
            <td>
                Weight
            </td>
            <td>
                @ViewBag.currentWeight<text>kg</text>
            </td>
        </tr>

        <tr>
            <td>
                Service Type
            </td>
            <td>
                @ViewBag.currentServiceType
            </td>
        </tr>

        <tr>
            <td>
                Fee
            </td>
            <td>
                 @ViewBag.currency&nbsp;@ViewBag.price @if(ViewBag.penalty == true){
                    <div class = "text-danger">(Including ¥500 penalty)</div>
}
            </td>
        </tr>

        @if (ViewBag.limit != null)
        {
        <tr>
            <td>
                Weight Limit
            </td>
            <td>
                @ViewBag.limit <text>kg</text>
            </td>
        </tr>
        }
    </table>
}


<script type="text/javascript">
    function AppendUrlParamTokens(url, params) {

        for (var param in params) {
            if (params[param] == null) {
                delete params[param];
            }
        }

        return url + "?" + jQuery.param(params);
    }

    function OnPackageTypesChange(ddl) {
        jQuery.getJSON(AppendUrlParamTokens('@Url.Action("GetSizes", "Calculate")', { packageType: ddl.options[ddl.selectedIndex].value }), function (result) {
            var target = jQuery('#sizes_ddl');
            target.empty();
            jQuery(result).each(function() {
                jQuery(document.createElement('option'))
                    .text(this.Text)
                    .appendTo(target);
            });
        });
    };
</script>

