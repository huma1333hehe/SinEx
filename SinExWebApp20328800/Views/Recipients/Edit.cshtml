@model SinExWebApp20328800.Models.Recipient

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Recipient</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.RecipientID)

        <div class="form-group">
            @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" }, onchange = "OnGeneralRecipientChange()" })
                @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CompanyName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control", onchange = "OnGeneralRecipientChange()" } })
                @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DepartmentName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DepartmentName, new { htmlAttributes = new { @class = "form-control", onchange = "OnGeneralRecipientChange()" } })
                @Html.ValidationMessageFor(model => model.DepartmentName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DeliveryBuilding, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DeliveryBuilding, new { htmlAttributes = new { @class = "form-control", onchange = "OnGeneralRecipientChange()" } })
                @Html.ValidationMessageFor(model => model.DeliveryBuilding, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DeliveryStreet, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DeliveryStreet, new { htmlAttributes = new { @class = "form-control", onchange = "OnGeneralRecipientChange()" } })
                @Html.ValidationMessageFor(model => model.DeliveryStreet, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DeliveryCity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DeliveryCity, new { htmlAttributes = new { @class = "form-control", onchange = "OnGeneralRecipientChange()" } })
                @Html.ValidationMessageFor(model => model.DeliveryCity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DeliveryProvince, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DeliveryProvince, new { htmlAttributes = new { @class = "form-control", onchange = "OnGeneralRecipientChange()" } })
                @Html.ValidationMessageFor(model => model.DeliveryProvince, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DeliveryPostcode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DeliveryPostcode, new { htmlAttributes = new { @class = "form-control", onchange = "OnGeneralRecipientChange()" } })
                @Html.ValidationMessageFor(model => model.DeliveryPostcode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control", onchange = "OnGeneralRecipientChange()" } })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", onchange = "OnGeneralRecipientChange()" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RecipientCreditCardNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RecipientCreditCardNumber, new { htmlAttributes = new { @class = "form-control", onchange = "OnGeneralRecipientChange()" } })
                @Html.ValidationMessageFor(model => model.RecipientCreditCardNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RecipientCreditCardSecurityNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RecipientCreditCardSecurityNumber, new { htmlAttributes = new { @class = "form-control", onchange = "OnGeneralRecipientChange()" } })
                @Html.ValidationMessageFor(model => model.RecipientCreditCardSecurityNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RecipientCreditCardType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.RecipientCreditCardType, new SelectList(new List<string> { "American Express", "Diners Club", "Discover", "masterCard", "UnionPay", "Visa" }).ToList(), "Please select", new { @class = "form-control dropdwn", onchange = "OnGeneralRecipientChange()" })
                @Html.ValidationMessageFor(model => model.RecipientCreditCardType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RecipientCreditCardHolderName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RecipientCreditCardHolderName, new { htmlAttributes = new { @class = "form-control", onchange = "OnGeneralRecipientChange()" } })
                @Html.ValidationMessageFor(model => model.RecipientCreditCardHolderName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RecipientCreditCardExpiryMonth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.RecipientCreditCardExpiryMonth, new SelectList(new List<string> { "1", "2", "3", "4", "5", "6", "8", "9", "10", "11", "12" }).ToList(), "Please select", new { @class = "form-control dropdwn", onchange = "OnGeneralRecipientChange()" })
                @Html.ValidationMessageFor(model => model.RecipientCreditCardExpiryMonth, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RecipientCreditCardExpiryYear, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.RecipientCreditCardExpiryYear, new SelectList(new List<string> { "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030" }).ToList(), "Please select", new { @class = "form-control dropdwn", onchange = "OnGeneralRecipientChange()" })
                @Html.ValidationMessageFor(model => model.RecipientCreditCardExpiryYear, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Nickname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nickname, new { htmlAttributes = new { @class = "form-control", onchange = "OnNicknameChange()" } })
                @Html.ValidationMessageFor(model => model.Nickname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


<script type="text/javascript">
    function OnNicknameChange() {
        var Nickname = $('#Nickname').val();
        $.ajax({
            url: '/Recipients/GetRecipientNickname',
            type: "GET",
            dataType: "JSON",
            data: { Nickname: Nickname },
            success: function (result) {
                if (result != null) {
                    $("#Nickname").val("");
                    alert("Error! The recipient with nickname " + Nickname + " already exists in " + result + "'s account\n");
                }
            }
        });
    }

    function OnGeneralRecipientChange() {
        var FullName = $('#FullName').val();
        var CompanyName = $('#CompanyName').val();
        var DepartmentName = $('#DepartmentName').val();
        var DeliveryBuilding = $('#DeliveryBuilding').val();
        var DeliveryStreet = $('#DeliveryStreet').val();
        var DeliveryProvince = $('#DeliveryProvince').val();
        var DeliveryCity = $('#DeliveryCity').val();
        var PhoneNumber = $('#PhoneNumber').val();
        var Email = $('#Email').val();
        $.ajax({
            url: '/Recipients/GetGeneralRecipient',
            type: "GET",
            dataType: "JSON",
            data: {
                FullName: FullName,
                CompanyName: CompanyName,
                DepartmentName: DepartmentName,
                DeliveryBuilding: DeliveryBuilding,
                DeliveryStreet: DeliveryStreet,
                DeliveryCity: DeliveryCity,
                DeliveryProvince: DeliveryProvince,
                PhoneNumber: PhoneNumber,
                Email: Email
            },
            success: function (result) {
                if (result != null) {
                    alert("Error! The recipient with the following information already exists in " + result + "'s account: \n\t" + "full name: " + FullName + "\n\t" + "company name: " + CompanyName + "\n\t" + "department name: " + DepartmentName + "\n\t" + "delivery address: " + DeliveryAddress + "\n\t" + "phone number: " + PhoneNumber + "\n\t" + "email address: " + Email + "\n\tPlease try agian by inputing something different!");
                }
            }
        });
    }
