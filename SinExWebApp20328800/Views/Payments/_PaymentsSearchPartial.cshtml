@model SinExWebApp20328800.ViewModels.PaymentsSearchViewModel

@using (Html.BeginForm("GeneratePaymentHistoryReport", "Payments", FormMethod.Get))
{
    <div class="form-group">
        <div class="col-md-12">
            @Html.LabelFor(a => a.ShippingAccountId, "Shipping Account: ")
            @if (User.IsInRole("Employee"))
            {
                @Html.DropDownListFor(a => a.ShippingAccountId, Model.ShippingAccounts, new { @class = "form-control", @Value = ViewBag.CurrentShippingAccountId , onchange = "+onShippingAccountIdChange(this)", id = "s_ddl" })
            }
            else
            {
                @Html.EditorFor(a => a.ShippingAccountId, new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.lala, @readonly = "readonly" } })
            }
            @Html.ValidationMessageFor(a => a.ShippingAccountId, "", new { @class = "text-danger" })
        </div>

        <div class="col-md-12">
            @Html.LabelFor(a => a.WaybillId, "Waybill Id: ")
            @Html.DropDownListFor(a => a.WaybillId, Model.WaybillIds, new { @class = "form-control", @Value = ViewBag.CurrentWaybillId == null ? 0: ViewBag.CurrentWaybillId, id = "sizes_ddl" })
            @Html.ValidationMessageFor(a => a.WaybillId, "", new { @class = "text-danger" })
        </div>

        <div class="col-md-12">
            @Html.LabelFor(a => a.StartingDate, "Date from ")
            @Html.EditorFor(a => a.StartingDate, new { htmlAttributes = new { @class = "form-control date-time-picker", @Value = ViewBag.CurrentStartingDate != null ? ViewBag.CurrentStartingDate.ToString("yyyy/MM/dd HH:mm") : DateTime.Now.ToString("yyyy/MM/dd HH:mm") } })
            @Html.ValidationMessageFor(model => model.StartingDate, "", new { @class = "text-danger" })

            @Html.LabelFor(a => a.EndingDate, "To ")
            @Html.EditorFor(a => a.EndingDate, new { htmlAttributes = new { @class = "form-control date-time-picker", @Value = ViewBag.CurrentEndingDate != null ? ViewBag.CurrentEndingDate.ToString("yyyy/MM/dd HH:mm") : DateTime.Now.ToString("yyyy/MM/dd HH:mm") } })
            @Html.ValidationMessageFor(model => model.EndingDate, "", new { @class = "text-danger" })

            <input type="submit" value="Search" />
        </div>
    </div>
}

<script type="text/javascript">
    function AppendUrlParamTokens(url, params) {

        for (var param in params) {
            if (params[param] == null) {
                delete params[param];
            }
        }

        return url + "?" + jQuery.param(params);
    }

    function onShippingAccountIdChange(ddl) {
        jQuery.getJSON(AppendUrlParamTokens('@Url.Action("GetWaybillIds", "Payments")', { shippingaccountid: ddl.options[ddl.selectedIndex].value }), function (result) {
            var target = jQuery('#sizes_ddl');
            target.empty();
            jQuery(result).each(function () {
                jQuery(document.createElement('option'))
                    .attr("value", this.Value)
                    .text(this.Text)
                    .appendTo(target);
            });
        });
    };
    $(document).ready(function () {
        onShippingAccountIdChange($('#s_ddl'));
    });
</script>