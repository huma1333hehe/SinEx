@model SinExWebApp20328800.Models.Shipment

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Shipment</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ReferenceNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReferenceNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ReferenceNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Origin, "Origin", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Origin", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Origin, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Destination, "Destination", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Destination", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Destination, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ShipmentPayer, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.ShipmentPayer, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ShipmentPayer, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TaxPayer, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.TaxPayer, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TaxPayer, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RecipientAddressNickname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("RecipientAddressNickname", null, "Please select...", htmlAttributes: new { @class = "form-control", onchange = "OnRecipientAddressNicknamesChange(this)" })
                @Html.ValidationMessageFor(model => model.RecipientAddressNickname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RecipientFullName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RecipientFullName, new { htmlAttributes = new { @class = "form-control", id = "RecipientFullName" } })
                @Html.ValidationMessageFor(model => model.RecipientFullName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RecipientCompanyName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RecipientCompanyName, new { htmlAttributes = new { @class = "form-control", id = "RecipientCompanyName" } })
                @Html.ValidationMessageFor(model => model.RecipientCompanyName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RecipientDepartmentName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RecipientDepartmentName, new { htmlAttributes = new { @class = "form-control", id = "RecipientDepartmentName" } })
                @Html.ValidationMessageFor(model => model.RecipientDepartmentName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RecipientDeliveryAddress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RecipientDeliveryAddress, new { htmlAttributes = new { @class = "form-control" }, id = "RecipientDeliveryAddress" })
                @Html.ValidationMessageFor(model => model.RecipientDeliveryAddress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RecipientPhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RecipientPhoneNumber, new { htmlAttributes = new { @class = "form-control" }, id = "RecipientPhoneNumber" })
                @Html.ValidationMessageFor(model => model.RecipientPhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RecipientEmail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RecipientEmail, new { htmlAttributes = new { @class = "form-control" }, id = "RecipientEmail" })
                @Html.ValidationMessageFor(model => model.RecipientEmail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ServiceTypeID, "ServiceTypeID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ServiceTypeID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ServiceTypeID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PickupLocationNickname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("PickupLocationNickname", null, "Please select...", htmlAttributes: new { @class = "form-control", onchange = "OnPickupLocationNicknamesChange(this)" })
                @Html.ValidationMessageFor(model => model.PickupLocationNickname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PickupLocation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PickupLocation, new { htmlAttributes = new { @class = "form-control", id = "PickupLocation" } })
                @Html.ValidationMessageFor(model => model.PickupLocation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RecipientShippingAccountID, "RecipientShippingAccountID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("RecipientShippingAccountID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.RecipientShippingAccountID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>



<script type="text/javascript">
    function AppendUrlParamTokens(url, params) {

        for (var param in params) {
            if (params[param] == null) {
                delete params[param];
            }
        }

        return url + "?" + jQuery.param(params);
    }

    function OnRecipientAddressNicknamesChange(ddl) {
        jQuery.getJSON(AppendUrlParamTokens('@Url.Action("GetRecipient", "Shipments")', { RecipientAddressNickname: ddl.options[ddl.selectedIndex].value }), function (result) {
            if (result.length != 0) {
                document.getElementById("RecipientFullName").value = result.FullName;
                document.getElementById("RecipientCompanyName").value = result.CompanyName;
                document.getElementById("RecipientDepartmentName").value = result.DepartmentName;
                document.getElementById("RecipientDeliveryAddress").value = result.DeliveryAddress;
                document.getElementById("RecipientEmail").value = result.Email;
                document.getElementById("RecipientPhoneNumber").value = result.PhoneNumber;
            } else {
                document.getElementById("RecipientFullName").value = "";
                document.getElementById("RecipientCompanyName").value = "";
                document.getElementById("RecipientDepartmentName").value = "";
                document.getElementById("RecipientDeliveryAddress").value = "";
                document.getElementById("RecipientEmail").value = "";
                document.getElementById("RecipientPhoneNumber").value = "";
            }


        });
    };

    function OnPickupLocationNicknamesChange(ddl) {
        jQuery.getJSON(AppendUrlParamTokens('@Url.Action("GetPickupLocation", "Shipments")', { PickupLocationNickname: ddl.options[ddl.selectedIndex].value }), function (result) {
            if (result.length != 0) {
                document.getElementById("PickupLocation").value = result.Location;
            } else {
                document.getElementById("PickupLocation").value = "";
            }


        });
    };
</script>