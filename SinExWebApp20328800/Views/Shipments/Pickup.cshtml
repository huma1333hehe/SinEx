@model SinExWebApp20328800.Models.Shipment

@{
    ViewBag.Title = "Pickup";
}

<h2>Pickup</h2>

<div>
    <h4>Shipment</h4>
    <hr />
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.WaybillId)
            @Html.HiddenFor(model => model.ReferenceNumber)
            @Html.HiddenFor(model => model.NumberOfPackages)
            @Html.HiddenFor(model => model.SenderShippingAccountID)
            @Html.HiddenFor(model => model.ShipmentPayer)
            @Html.HiddenFor(model => model.TaxPayer)
            @Html.HiddenFor(model => model.PickupLocation)
            @Html.HiddenFor(model => model.PickupType)
            @Html.HiddenFor(model => model.PickupDate)
            @Html.HiddenFor(model => model.ConfirmOrNot)
            @Html.HiddenFor(model => model.PickupOrNot)
            @Html.HiddenFor(model => model.ServiceTypeID)
            @Html.HiddenFor(model => model.RecipientShippingAccountID)
            @Html.HiddenFor(model => model.Origin)
            @Html.HiddenFor(model => model.Destination)
            @Html.HiddenFor(model => model.RecipientAddressNickname)
            @Html.HiddenFor(model => model.RecipientFullName)
            @Html.HiddenFor(model => model.RecipientCompanyName)
            @Html.HiddenFor(model => model.RecipientDepartmentName)
            @Html.HiddenFor(model => model.RecipientDeliveryBuilding)
            @Html.HiddenFor(model => model.RecipientDeliveryStreet)
            @Html.HiddenFor(model => model.RecipientDeliveryCity)
            @Html.HiddenFor(model => model.RecipientDeliveryProvince)
            @Html.HiddenFor(model => model.RecipientDeliveryPostcode)
            @Html.HiddenFor(model => model.RecipientPhoneNumber)
            @Html.HiddenFor(model => model.RecipientEmail)
            @Html.HiddenFor(model => model.Packages)
            @Html.HiddenFor(model => model.EstimatedShipmentTotalAmount)
            @Html.HiddenFor(model => model.ShipmentTotalAmount)
            @Html.HiddenFor(model => model.NotifySenderOrNot)
            @Html.HiddenFor(model => model.NotifyRecipientOrNot)
            <span class="field-validation-valid text-danger" data-valmsg-for="packages" data-valmsg-replace="true">@ViewBag.Incomplete</span>

            <hr />
            <h4>Input Duty and Tax Fee</h4>

            Currency: @ViewBag.taxCurrency (the currency of the city in which the tax and duty payer is located)

            <div class="form-group">
                @Html.LabelFor(model => model.Duty, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Duty, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Duty, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Tax, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Tax, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Tax, "", new { @class = "text-danger" })
                </div>
            </div>

            <hr />
            <h4>Input Pickup Information for Tracking</h4>

            <div class="form-group">
                <label class="control-label col-md-2" for="TrackingPickupLocation">Pickup Location (recorded as tracking information)</label>
                <div class="col-md-10">
                    <input class="form-control text-box single-line" data-val="true" data-val-required="The Pickup Location field is required."  name="TrackingPickupLocation"  type="text">
                    <span class="field-validation-valid text-danger" data-valmsg-for="TrackingPickupLocation" data-valmsg-replace="true"></span>
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2" for="PickupRemark">Pickup Remark</label>
                <div class="col-md-10">
                    <input class="form-control text-box single-line" data-val="true" id="PickupLocation_edit" name="PickupRemark" type="text">
                    <span class="field-validation-valid text-danger" data-valmsg-for="PickupLocation" data-valmsg-replace="true"></span>
                </div>
            </div>

            <hr />
            <h4>Input Actual weight For Each Package</h4>
            <span class="field-validation-valid text-danger" data-valmsg-for="packages" data-valmsg-replace="true">@ViewBag.ErrorMsg</span>
            @foreach (var package in Model.Packages)
            {
                <div class="form-group">
                    <label class="control-label col-md-2" for="package_@package.PackageID">@package.Description @package.PackageType.Type @package.PackageTypeSize.TypeSize </label>
                    <div class="col-md-10">
                        <input class="form-control text-box single-line" data-val="true" data-val-number="The field DeclaredWeight must be a number." data-val-required="The ActualWeight field is required." id="ActualWeight" name="package_@package.PackageID" value="" type="text">
                    </div>
                </div>
            }


            @if (ViewBag.Error == null)
            {
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Pickup" class="btn btn-default" />
                    </div>
                </div>
            }
            else
            {
                <h2>@ViewBag.Error</h2>
            }


        </div>
    }

    <hr />
    <div>
        <h4>Shipment Waybill ID: @Model.WaybillId.ToString("0000000000000000")</h4>
        <hr />
        <div class="row">
            <div class="col-md-8 col-md-offset-2">
                <table class="table ">
                    <tr>
                        <td>
                            <strong>
                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                General Information
                            </strong>
                        </td>
                        <td></td>
                    </tr>
                    @if (User.IsInRole("Customer"))
                    {
                        <tr>
                            <td>
                                @Html.DisplayNameFor(model => model.ReferenceNumber)
                            </td>
                            <td>
                                @Html.DisplayFor(model => model.ReferenceNumber)
                            </td>
                        </tr>
                    }
                    <tr>
                        <td>
                            @Html.DisplayNameFor(model => model.ServiceType.Type)
                        </td>
                        <td>
                            @Html.DisplayFor(model => model.ServiceType.Type)
                        </td>
                    </tr>
                    <tr>
                        <td>
                            Sender User Name
                        </td>
                        <td>
                            @Html.DisplayFor(model => model.SenderShippingAccount.UserName)
                        </td>
                    </tr>

                    @if (Model.ShipmentPayer == SinExWebApp20328800.Models.ShipmentPayer.Recipient || Model.TaxPayer == SinExWebApp20328800.Models.TaxPayer.Recipient)
                    {
                        <tr>
                            <td>
                                Recipient User Name
                            </td>
                            <td>
                                @Html.DisplayFor(model => model.RecipientShippingAccount.UserName)
                            </td>
                        </tr>
                    }

                    <tr>
                        <td>
                            @Html.DisplayNameFor(model => model.Origin)
                        </td>
                        <td>
                            @Html.DisplayFor(model => model.Origin)
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.DisplayNameFor(model => model.Destination)
                        </td>
                        <td>
                            @Html.DisplayFor(model => model.Destination)
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.DisplayNameFor(model => model.ShipmentPayer)
                        </td>
                        <td>
                            @Html.DisplayFor(model => model.ShipmentPayer)
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.DisplayNameFor(model => model.TaxPayer)
                        </td>
                        <td>
                            @Html.DisplayFor(model => model.TaxPayer)
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.DisplayNameFor(model => model.Duty)
                        </td>
                        <td>
                            @ViewBag.taxCurrency @Html.DisplayFor(model => model.Duty)
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.DisplayNameFor(model => model.Tax)
                        </td>
                        <td>
                            @ViewBag.taxCurrency @Html.DisplayFor(model => model.Tax)
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.DisplayNameFor(model => model.NotifySenderOrNot)
                        </td>
                        <td>
                            @Html.DisplayFor(model => model.NotifySenderOrNot)
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.DisplayNameFor(model => model.NotifyRecipientOrNot)
                        </td>
                        <td>
                            @Html.DisplayFor(model => model.NotifyRecipientOrNot)
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <strong>
                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                Status Information
                            </strong>
                        </td>
                        <td></td>
                    </tr>
                    <tr>
                        <td>
                            @Html.DisplayNameFor(model => model.ConfirmOrNot)
                        </td>
                        <td>
                            @Html.DisplayFor(model => model.ConfirmOrNot)
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.DisplayNameFor(model => model.PickupOrNot)
                        </td>
                        <td>
                            @Html.DisplayFor(model => model.PickupOrNot)
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.DisplayNameFor(model => model.DeliveredOrNot)
                        </td>
                        <td>
                            @Html.DisplayFor(model => model.DeliveredOrNot)
                        </td>
                    </tr>

                    @if (Model.ConfirmOrNot == true)
                    {
                        <tr>
                            <td>
                                @Html.DisplayNameFor(model => model.PickupType)
                            </td>
                            <td>
                                @Html.DisplayFor(model => model.PickupType)
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @Html.DisplayNameFor(model => model.PickupDate)
                            </td>
                            <td>
                                @Html.DisplayFor(model => model.PickupDate)
                            </td>
                        </tr>
                    }
                    <tr>
                        <td>
                            <strong>
                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                Sender Information
                            </strong>
                        </td>
                        <td></td>
                    </tr>
                    <tr>
                        <td>
                            Sender Name
                        </td>
                        <td>
                            @if (Model.SenderShippingAccount is SinExWebApp20328800.Models.PersonalShippingAccount)
                            {
                                @Html.DisplayFor(model => ((SinExWebApp20328800.Models.PersonalShippingAccount)model.SenderShippingAccount).FirstName)<text>&nbsp;</text>
                                @Html.DisplayFor(model => ((SinExWebApp20328800.Models.PersonalShippingAccount)model.SenderShippingAccount).LastName)
                            }
                            else
                            {
                                @Html.DisplayFor(model => ((SinExWebApp20328800.Models.BusinessShippingAccount)model.SenderShippingAccount).ContactPersonName)<text>,</text>
                                @Html.DisplayFor(model => ((SinExWebApp20328800.Models.BusinessShippingAccount)model.SenderShippingAccount).DepartmentName)<text>&nbsp;</text>
                                @Html.DisplayFor(model => ((SinExWebApp20328800.Models.BusinessShippingAccount)model.SenderShippingAccount).CompanyName)<text>&nbsp;</text>
                            }
                        </td>
                    </tr>
                    <tr>
                        <td>
                            Sender Address
                        </td>
                        <td>
                            @Html.DisplayFor(model => model.SenderShippingAccount.BuildingInformation)<text>,</text>
                            @Html.DisplayFor(model => model.SenderShippingAccount.StreetInformation)<text>,</text>
                            @Html.DisplayFor(model => model.SenderShippingAccount.City)<text>,</text>
                            @Html.DisplayFor(model => model.SenderShippingAccount.ProvinceCode)<text>,</text>
                            @Html.DisplayFor(model => model.SenderShippingAccount.PostalCode)
                        </td>
                    </tr>

                    <tr>
                        <td>
                            Sender Phone
                        </td>
                        <td>
                            @Html.DisplayFor(model => model.SenderShippingAccount.PhoneNumber)
                        </td>
                    </tr>
                    <tr>
                        <td>
                            Sender Email
                        </td>
                        <td>
                            @Html.DisplayFor(model => model.SenderShippingAccount.EmailAddress)
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <strong>
                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                Recipient Information
                            </strong>
                        </td>
                        <td></td>
                    </tr>
                    <tr>
                        <td>
                            @Html.DisplayNameFor(model => model.RecipientAddressNickname)
                        </td>
                        <td>
                            @Html.DisplayFor(model => model.RecipientAddressNickname)
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.DisplayNameFor(model => model.RecipientFullName)
                        </td>
                        <td>
                            @Html.DisplayFor(model => model.RecipientFullName)
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.DisplayNameFor(model => model.RecipientCompanyName)
                        </td>
                        <td>
                            @Html.DisplayFor(model => model.RecipientCompanyName)
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.DisplayNameFor(model => model.RecipientDepartmentName)
                        </td>
                        <td>
                            @Html.DisplayFor(model => model.RecipientDepartmentName)
                        </td>
                    </tr>
                    <tr>
                        <td>
                            Recipient Address
                        </td>
                        <td>
                            @Html.DisplayFor(model => model.RecipientDeliveryBuilding)<text>,</text>
                            @Html.DisplayFor(model => model.RecipientDeliveryStreet)<text>,</text>
                            @Html.DisplayFor(model => model.RecipientDeliveryCity)<text>,</text>
                            @Html.DisplayFor(model => model.RecipientDeliveryProvince)<text>,</text>
                            @Html.DisplayFor(model => model.RecipientDeliveryPostcode)
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.DisplayNameFor(model => model.RecipientPhoneNumber)
                        </td>
                        <td>
                            @Html.DisplayFor(model => model.RecipientPhoneNumber)
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.DisplayNameFor(model => model.RecipientEmail)
                        </td>
                        <td>
                            @Html.DisplayFor(model => model.RecipientEmail)
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <strong>
                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                Pickup Information
                            </strong>
                        </td>
                        <td></td>
                    </tr>
                    <tr>
                        <td>
                            @Html.DisplayNameFor(model => model.PickupLocationNickname)
                        </td>
                        <td>
                            @Html.DisplayFor(model => model.PickupLocationNickname)
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.DisplayNameFor(model => model.PickupLocation)
                        </td>
                        <td>
                            @Html.DisplayFor(model => model.PickupLocation)
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <strong>
                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                Package Information
                            </strong>
                        </td>
                        <td></td>
                    </tr>
                    <tr>
                        <td>
                            @Html.DisplayNameFor(model => model.NumberOfPackages)
                        </td>
                        <td>
                            @Html.DisplayFor(model => model.NumberOfPackages)
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.DisplayNameFor(model => model.EstimatedShipmentTotalAmount)
                        </td>
                        <td>
                            @if (Model.EstimatedShipmentTotalAmount != 0)
                            {
                                <text>¥</text>
                            }
                            @Html.DisplayFor(model => model.EstimatedShipmentTotalAmount)
                        </td>
                    </tr>
                    <tr></tr>
                </table>

            </div>
            <div class="col-md-12">
                @if (User.IsInRole("Customer") && Model.CancelledOrNot == false && Model.ConfirmOrNot == false && Model.NumberOfPackages < 10)
            {
                    <a href="/Packages/Create?WaybillId=@Model.WaybillId">Add one more package for this shipment</a>
                }
                <table class="table">
                    <tr>

                        <th>
                            @Html.DisplayNameFor(model => model.Packages.Single().PackageType.Type)
                        </th>
                        <th>
                            Size
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Packages.Single().Description)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Packages.Single().Value)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Packages.Single().DeclaredWeight)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Packages.Single().ActualWeight)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Packages.Single().DeclaredFee)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Packages.Single().ActualFee)
                        </th>
                        <th></th>
                    </tr>

                    @foreach (var item in Model.Packages)
                    {
                        <tr>

                            <td>
                                @Html.DisplayFor(modelItem => item.PackageType.Type)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.PackageTypeSize.TypeSize)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Description)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Currency.CurrencyCode)&nbsp;@Html.DisplayFor(modelItem => item.Value)
                            </td>
                            <td>
                                @if (item.PackageType.Type == "Envelope")
                                {
                                    <text>N/A</text>
                                }
                                else
                                {
                                    @item.DeclaredWeight.ToString("F1")
                                }

                            </td>
                            <td>
                                @if (item.ActualWeight != null)
                                {
                                    if (item.PackageType.Type == "Envelope")
                                    {
                                        <text>N/A</text>
                                    }
                                    else
                                    {
                                        @item.ActualWeight.Value.ToString("F1")
                                    }
                                }
                            </td>
                            <td>
                                ¥ @Html.DisplayFor(modelItem => item.DeclaredFee)
                            </td>
                            <td>
                                @if (item.ActualFee != null)
                                {
                                    <text>¥</text>
                                }
                                @Html.DisplayFor(modelItem => item.ActualFee)
                            </td>
                            <td>
                                @if (User.IsInRole("Customer") && item.Shipment.CancelledOrNot == false && item.Shipment.ConfirmOrNot == false)
                                {
                                    @Html.ActionLink("Edit", "../Packages/Edit", new { id = item.PackageID }) <text>|</text>
                                    @Html.ActionLink("Details", "../Packages/Details", new { id = item.PackageID }) <text>|</text>
                                    @Html.ActionLink("Delete", "../Packages/Delete", new { id = item.PackageID })
                                }
                                else
                                {
                                    @Html.ActionLink("Details", "../Packages/Details", new { id = item.PackageID })
                                }

                            </td>
                            <td></td>

                        </tr>
                    }

                    <tr>
                        <td>
                            <strong>
                                Total
                            </strong>
                        </td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td>
                            <strong>
                                @Model.Packages.Sum(m => m.DeclaredWeight).ToString("F1")
                            </strong>
                        </td>
                        <td>
                            <strong>
                                @Model.Packages.Sum(m => m.ActualWeight).Value.ToString("F1")
                            </strong>
                        </td>
                        <td>
                            <strong>
                                @Model.Packages.Sum(m => m.DeclaredFee)
                            </strong>
                        </td>
                        <td>
                            <strong>
                                @Model.Packages.Sum(m => m.ActualFee)
                            </strong>
                        </td>
                        <td></td>
                    </tr>
                </table>
            </div>
        </div>
    </div>

    <p>
        @Html.ActionLink("Back to List", "Index")
    </p>
</div>