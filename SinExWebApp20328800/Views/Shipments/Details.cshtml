@model SinExWebApp20328800.Models.Shipment

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<div>
    <h4>Shipment</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            Sender User Name
        </dt>
        <dd>
            @Html.DisplayFor(model => model.SenderShippingAccount.UserName)
        </dd>
        @if (Model.ShipmentPayer == SinExWebApp20328800.Models.ShipmentPayer.Recipient || Model.TaxPayer == SinExWebApp20328800.Models.TaxPayer.Recipient)
        {
            <dt>
                Recipient User Name
            </dt>
            <dd>
                @Html.DisplayFor(model => model.RecipientShippingAccount.UserName)
            </dd>
        }
        <dt>
            @Html.DisplayNameFor(model => model.ServiceType.Type)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ServiceType.Type)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ReferenceNumber)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ReferenceNumber)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Origin)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Origin)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Destination)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Destination)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ShipmentPayer)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ShipmentPayer)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.TaxPayer)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.TaxPayer)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Duty)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Duty)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Tax)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Tax)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ConfirmOrNot)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ConfirmOrNot)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.PickupOrNot)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.DeliveredOrNot)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.DeliveredOrNot)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.PickupOrNot)
        </dd>
        @if (Model.ConfirmOrNot == true)
        {
            <dt>
                @Html.DisplayNameFor(model => model.PickupType)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.PickupType)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.PickupDate)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.PickupDate)
            </dd>
        }
        <dt>
            @Html.DisplayNameFor(model => model.RecipientAddressNickname)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.RecipientAddressNickname)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.RecipientFullName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.RecipientFullName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.RecipientCompanyName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.RecipientCompanyName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.RecipientDepartmentName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.RecipientDepartmentName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.RecipientDeliveryBuilding)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.RecipientDeliveryBuilding)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.RecipientDeliveryStreet)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.RecipientDeliveryStreet)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.RecipientDeliveryCity)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.RecipientDeliveryCity)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.RecipientDeliveryProvince)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.RecipientDeliveryProvince)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.RecipientDeliveryPostcode)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.RecipientDeliveryPostcode)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.RecipientPhoneNumber)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.RecipientPhoneNumber)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.RecipientEmail)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.RecipientEmail)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.RecipientCreditCardNumber)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.RecipientCreditCardNumber)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.RecipientCreditCardType)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.RecipientCreditCardType)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.RecipientCreditCardSecurityNumber)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.RecipientCreditCardSecurityNumber)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.RecipientCreditCardHolderName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.RecipientCreditCardHolderName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.RecipientCreditCardExpiryMonth)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.RecipientCreditCardExpiryMonth)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.RecipientCreditCardExpiryYear)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.RecipientCreditCardExpiryYear)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.PickupLocationNickname)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.PickupLocationNickname)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.PickupLocation)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.PickupLocation)
        </dd>


        <dt>
            @Html.DisplayNameFor(model => model.NumberOfPackages)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.NumberOfPackages)
        </dd>

    </dl>

</div>

<table class="table">
    <tr>

        <th>
            @Html.DisplayNameFor(model => model.Packages.Single().PackageType.Type)
        </th>
        <th>
            Size
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Packages.Single().Description)
        </th>
        <th>
            Currency
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Packages.Single().Value)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Packages.Single().DeclaredWeight)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Packages.Single().ActualWeight)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model.Packages)
    {
        <tr>

            <td>
                @Html.DisplayFor(modelItem => item.PackageType.Type)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PackageTypeSize.TypeSize)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Currency.CurrencyCode)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Value)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DeclaredWeight)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ActualWeight)
            </td>
            <td>
                @if (item.Shipment.CancelledOrNot == false && item.Shipment.ConfirmOrNot == false)
                {
                    @Html.ActionLink("Edit", "../Packages/Edit", new { id = item.PackageID }) <text>|</text>
                    @Html.ActionLink("Details", "../Packages/Details", new { id = item.PackageID }) <text>|</text>
                    @Html.ActionLink("Delete", "../Packages/Delete", new { id = item.PackageID })
                }
                else
                {
                    @Html.ActionLink("Details", "../Packages/Details", new { id = item.PackageID })
                }

            </td>
            <td></td>

        </tr>
    }

</table>


<p>
    @if (Model.CancelledOrNot == false && Model.ConfirmOrNot == false)
    {
        @Html.ActionLink("Edit", "Edit", new { id = Model.WaybillId }) <text>|</text>
    }
    @Html.ActionLink("Back to List", "Index")
</p>
