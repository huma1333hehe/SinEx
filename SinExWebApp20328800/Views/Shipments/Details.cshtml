@model SinExWebApp20328800.Models.Shipment

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<div>
    <h4>Shipment Waybill ID: @Model.WaybillId.ToString("0000000000000000")</h4>
    <hr />
    <div class="row">
        <div class="col-md-8 col-md-offset-2">
            <table class="table ">
                <tr>
                    <td>
                        <strong>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                            General Information
                        </strong>
                    </td>
                    <td></td>
                </tr>
                @if (User.IsInRole("Customer"))
                {
                    <tr>
                        <td>
                            @Html.DisplayNameFor(model => model.ReferenceNumber)
                        </td>
                        <td>
                            @Html.DisplayFor(model => model.ReferenceNumber)
                        </td>
                    </tr>
                }
                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ServiceType.Type)
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.ServiceType.Type)
                    </td>
                </tr>
                <tr>
                    <td>
                        Sender User Name
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.SenderShippingAccount.UserName)
                    </td>
                </tr>

                @if (Model.ShipmentPayer == SinExWebApp20328800.Models.ShipmentPayer.Recipient || Model.TaxPayer == SinExWebApp20328800.Models.TaxPayer.Recipient)
                {
                    <tr>
                        <td>
                            Recipient User Name
                        </td>
                        <td>
                            @Html.DisplayFor(model => model.RecipientShippingAccount.UserName)
                        </td>
                    </tr>
                }

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.Origin)
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.Origin)
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.Destination)
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.Destination)
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ShipmentPayer)
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.ShipmentPayer)
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.TaxPayer)
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.TaxPayer)
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.Duty)
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.Duty)
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.Tax)
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.Tax)
                    </td>
                </tr>
                <tr>
                    <td>
                        <strong>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                            Status Information
                        </strong>
                    </td>
                    <td></td>
                </tr>
                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ConfirmOrNot)
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.ConfirmOrNot)
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.PickupOrNot)
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.PickupOrNot)
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.DeliveredOrNot)
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.DeliveredOrNot)
                    </td>
                </tr>
                @if (Model.ConfirmOrNot == true)
                {
                    <tr>
                        <td>
                            @Html.DisplayNameFor(model => model.PickupType)
                        </td>
                        <td>
                            @Html.DisplayFor(model => model.PickupType)
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.DisplayNameFor(model => model.PickupDate)
                        </td>
                        <td>
                            @Html.DisplayFor(model => model.PickupDate)
                        </td>
                    </tr>
                }
                <tr>
                    <td>
                        <strong>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                            Sender Information
                        </strong>
                    </td>
                    <td></td>
                </tr>
                <tr>
                    <td>
                        Sender Name
                    </td>
                    <td>
                        @if (Model.SenderShippingAccount is SinExWebApp20328800.Models.PersonalShippingAccount)
                        {
                            @Html.DisplayFor(model => ((SinExWebApp20328800.Models.PersonalShippingAccount)model.SenderShippingAccount).FirstName)<text>&nbsp;</text>
                            @Html.DisplayFor(model => ((SinExWebApp20328800.Models.PersonalShippingAccount)model.SenderShippingAccount).LastName)
                        }
                        else
                        {
                            @Html.DisplayFor(model => ((SinExWebApp20328800.Models.BusinessShippingAccount)model.SenderShippingAccount).ContactPersonName)<text>,</text>
                            @Html.DisplayFor(model => ((SinExWebApp20328800.Models.BusinessShippingAccount)model.SenderShippingAccount).DepartmentName)<text>&nbsp;</text>
                            @Html.DisplayFor(model => ((SinExWebApp20328800.Models.BusinessShippingAccount)model.SenderShippingAccount).CompanyName)<text>&nbsp;</text>
                        }
                    </td>
                </tr>
                <tr>
                    <td>
                        Sender Address
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.SenderShippingAccount.BuildingInformation)<text>,</text>
                        @Html.DisplayFor(model => model.SenderShippingAccount.StreetInformation)<text>,</text>
                        @Html.DisplayFor(model => model.SenderShippingAccount.City)<text>,</text>
                        @Html.DisplayFor(model => model.SenderShippingAccount.ProvinceCode)<text>,</text>
                        @Html.DisplayFor(model => model.SenderShippingAccount.PostalCode)
                    </td>
                </tr>

                <tr>
                    <td>
                        Sender Phone
                    </td>
                    <td>
                        @Html.DisplayNameFor(model => model.SenderShippingAccount.PhoneNumber)
                    </td>
                </tr>
                <tr>
                    <td>
                        Sender Email
                    </td>
                    <td>
                        @Html.DisplayNameFor(model => model.SenderShippingAccount.EmailAddress)
                    </td>
                </tr>
                <tr>
                    <td>
                        <strong>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                            Recipient Information
                        </strong>
                    </td>
                    <td></td>
                </tr>
                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.RecipientAddressNickname)
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.RecipientAddressNickname)
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.RecipientFullName)
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.RecipientFullName)
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.RecipientCompanyName)
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.RecipientCompanyName)
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.RecipientDepartmentName)
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.RecipientDepartmentName)
                    </td>
                </tr>
                <tr>
                    <td>
                        Recipient Address
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.RecipientDeliveryBuilding)<text>,</text>
                        @Html.DisplayFor(model => model.RecipientDeliveryStreet)<text>,</text>
                        @Html.DisplayFor(model => model.RecipientDeliveryCity)<text>,</text>
                        @Html.DisplayFor(model => model.RecipientDeliveryProvince)<text>,</text>
                        @Html.DisplayFor(model => model.RecipientDeliveryPostcode)
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.RecipientPhoneNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.RecipientPhoneNumber)
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.RecipientEmail)
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.RecipientEmail)
                    </td>
                </tr>
                <tr>
                    <td>
                        <strong>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                            Pickup Information
                        </strong>
                    </td>
                    <td></td>
                </tr>
                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.PickupLocationNickname)
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.PickupLocationNickname)
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.PickupLocation)
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.PickupLocation)
                    </td>
                </tr>
                <tr>
                    <td>
                        <strong>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                            Package Information
                        </strong>
                    </td>
                    <td></td>
                </tr>
                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.NumberOfPackages)
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.NumberOfPackages)
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.EstimatedShipmentTotalAmount)
                    </td>
                    <td>
                        @if (Model.EstimatedShipmentTotalAmount != 0)
                        {
                            <text>¥</text>
                        }
                        @Html.DisplayFor(model => model.EstimatedShipmentTotalAmount)
                    </td>
                </tr>
                <tr></tr>
            </table>

        </div>
        <div class="col-md-12">
            @if (Model.CancelledOrNot == false && Model.ConfirmOrNot == false && Model.NumberOfPackages < 10)
            {
                <a href="/Packages/Create?WaybillId=@Model.WaybillId">Add one more package for this shipment</a>
            }
            <table class="table">
                <tr>

                    <th>
                        @Html.DisplayNameFor(model => model.Packages.Single().PackageType.Type)
                    </th>
                    <th>
                        Size
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Packages.Single().Description)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Packages.Single().Value)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Packages.Single().DeclaredWeight)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Packages.Single().ActualWeight)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Packages.Single().DeclaredFee)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Packages.Single().ActualFee)
                    </th>
                    <th></th>
                </tr>

                @foreach (var item in Model.Packages)
                {
                    <tr>

                        <td>
                            @Html.DisplayFor(modelItem => item.PackageType.Type)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.PackageTypeSize.TypeSize)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Description)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Currency.CurrencyCode)&nbsp;@Html.DisplayFor(modelItem => item.Value)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.DeclaredWeight)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ActualWeight)
                        </td>
                        <td>
                            ¥ @Html.DisplayFor(modelItem => item.DeclaredFee)
                        </td>
                        <td>
                            @if (item.ActualFee != null)
                            {
                                <text>¥</text>
                            }
                            @Html.DisplayFor(modelItem => item.ActualFee)
                        </td>
                        <td>
                            @if (User.IsInRole("Customer") && item.Shipment.CancelledOrNot == false && item.Shipment.ConfirmOrNot == false)
                            {
                                @Html.ActionLink("Edit", "../Packages/Edit", new { id = item.PackageID }) <text>|</text>
                                @Html.ActionLink("Details", "../Packages/Details", new { id = item.PackageID }) <text>|</text>
                                @Html.ActionLink("Delete", "../Packages/Delete", new { id = item.PackageID })
                            }
                            else
                            {
                                @Html.ActionLink("Details", "../Packages/Details", new { id = item.PackageID })
                            }

                        </td>
                        <td></td>

                    </tr>
                }

                <tr>
                    <td>
                        <strong>
                            Total
                        </strong>
                    </td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td>
                        <strong>
                            @Model.Packages.Sum(m => m.DeclaredWeight)
                        </strong>
                    </td>
                    <td>
                        <strong>
                            @Model.Packages.Sum(m => m.ActualWeight)
                        </strong>
                    </td>
                    <td>
                        <strong>
                            @Model.Packages.Sum(m => m.DeclaredFee)
                        </strong>
                    </td>
                    <td>
                        <strong>
                            @Model.Packages.Sum(m => m.ActualFee)
                        </strong>
                    </td>
                    <td></td>
                </tr>
            </table>
        </div>
    </div>
</div>




<p>
    @if (User.IsInRole("Customer") && Model.CancelledOrNot == false && Model.ConfirmOrNot == false)
    {
        @Html.ActionLink("Edit", "Edit", new { id = Model.WaybillId }) <text>|</text>
    }
    @Html.ActionLink("Back to List", "Index")
</p>